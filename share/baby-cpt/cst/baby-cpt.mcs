' For final field and trajectory output, use a fine grid setting:
'   .Set("StepsPerBoxNear", "40")
'   .Set("StepsPerBoxFar", "25")
'
' Export B-field on the following output grid:
'   dx = 4mm
'   x = [-200, ..., 400]
'   y = [-150, ..., 150]
'   z = [-100, ..., 500]
'   num_grid_points = 1.69M
'
' Export model as STP (this will include coils) for SolidWorks input
'   - check 'Export attributes' and 'Export as assembly' in dialog
'
' Export model as STL (this will not include coils) for Geant4 Input
'
' Export trajectories as ASCII for conversion to DXF
'
' Import STP into Solidworks, export coils as STL for Geant4 input
'
' Import STP into Solidworks and prepare for annotation
'   - apply "Brushed Copper" appearance to coils
'   - apply "Satin finish silver" appearance to steel
'   - apply "Clear glass" w/ [R=128,G=255,B=255] color to scintillator
'
' Compton scintillator geometry (unit=mm):
'   - inside corner is at (x=40, z=0)
'   - dimensions are 250x250x20
'   - tilted 28 degrees (cpt_theta1) off YZ plane
'   - the CAD model is displaced 0.1mm away from steel face
'     so that the actual scintillator corner is located at
'     (x=40.0719, z=0.0695)

Option Explicit

Sub Main()
   BeginHide
      StoreParameter("background_min_xbuf", "200.0")
      StoreParameter("background_max_xbuf", "100.0")
      StoreParameter("background_ybuf", "100.0")
      StoreParameter("background_zbuf", "100.0")
      cpt_DefineParameters()
   EndHide

   With Units
      .Geometry("mm")
      .Time("ns")
   End With

   With Background
      .Reset()
      .Type("Normal")
      .Epsilon("1.0")
      .XMinSpace("background_min_xbuf")
      .YMinSpace("background_ybuf")
      .ZMinSpace("background_zbuf")
      .XMaxSpace("background_max_xbuf")
      .YMaxSpace("background_ybuf")
      .ZMaxSpace("background_zbuf")
   End With

   With Boundary
      .Xmin("open")
      .Xmax("open")
      .Ymin("open")
      .Ymax("open")
      .Zmin("open")
      .Zmax("open")
      ' .Xsymmetry("none")
      ' .Ysymmetry("none")
      ' .Zsymmetry("none")
      .ApplyInAllDirections("True")
   End With

   With Material
      .Reset()
      .Name("Scintillator")
      .Type("normal")
      .Epsilon("2")
      .Mu("1")
      ' .ParticleVolumeTransparency("False")
      .Transparency("100")
      .Transparentoutline("True")
      .Create()
   End With

   With Material
      .Reset()
      .Name("Steel-1008")
      .FrqType("Static")
      .Type("Normal")
      .Epsilon("1")
      .Mu("1000")
      .Sigma("7.69e006")
      .Rho("7870.0")
      .ThermalType("Normal")
      .ThermalConductivity("59.5")
      .HeatCapacity("0.48")
      .Colour("0.615686", "0.615686", "0.615686")
      .ResetHBList()
      .SetNonlinearCurveType("Soft-Magnetic-BH")
      .AddNonlinearCurveValue("0", "0")
      .AddNonlinearCurveValue("109.8", "1")
      .AddNonlinearCurveValue("123.4", "1.1")
      .AddNonlinearCurveValue("143.2", "1.2")
      .AddNonlinearCurveValue("174.8", "1.3")
      .AddNonlinearCurveValue("246.2", "1.4")
      .AddNonlinearCurveValue("493", "1.5")
      .AddNonlinearCurveValue("954.2", "1.549")
      .AddNonlinearCurveValue("1751", "1.6")
      .AddNonlinearCurveValue("2942", "1.649")
      .AddNonlinearCurveValue("4376", "1.7")
      .AddNonlinearCurveValue("6204", "1.749")
      .AddNonlinearCurveValue("8355", "1.8")
      .AddNonlinearCurveValue("10500", "1.849")
      .AddNonlinearCurveValue("12890", "1.9")
      .AddNonlinearCurveValue("15270", "1.949")
      .AddNonlinearCurveValue("17830", "2")
      .AddNonlinearCurveValue("20450", "2.049")
      .AddNonlinearCurveValue("23240", "2.1")
      .AddNonlinearCurveValue("28640", "2.149")
      .AddNonlinearCurveValue("45760", "2.2")
      .AddNonlinearCurveValue("79560", "2.249")
      .AddNonlinearCurveValue("117000", "2.3")
      .AddNonlinearCurveValue("195800", "2.4")
      .AddNonlinearCurveValue("270600", "2.495")
      .AddNonlinearCurveValue("668500", "3")
      .AddNonlinearCurveValue("1.536e+006", "4.1")
      .AddNonlinearCurveValue("7.815e+006", "12")
      .GenerateNonlinearCurve()
      .Create()
   End With

   cpt_Build()

   With WCS
      .ActivateWCS("local")
      .SetNormal("0", "0", "1")
      .SetOrigin("0", "0", "0")
      .SetUVector("1", "0", "0")
   End With

   ' This brick is used to stop trajectories that miss the scintillator.
   With Brick
      .Reset()
      .Name("backstop")
      .Component("backstop")
      .Material("Scintillator")
      .Xrange("-6", "-1")
      .Yrange("60", "160")
      .Zrange("-10", "80")
      .Create()
   End With

   ' With Mesh
   '   .MeshType "PBA"
   '   .SetCreator "Tracking"
   ' End With

   With MeshSettings
      .SetMeshType("Hex")
      ' .Set("StepsPerBoxNear", "25")
      ' .Set("StepsPerBoxFar", "20")
      ' Use these settings for final results
      .Set("StepsPerBoxNear", "40")
      .Set("StepsPerBoxFar", "25")
   End With

   Mesh.SetCreator("Tracking")
   Mesh.SetFlavor("Low Frequency")

   With TrackingSolver
      .Reset()
      .Method("Hexahedral")
      .SolverOrderTet("2")
      .MaxTimeSteps("20000")
      .SetSpatialSamplingRate("5")
      .SetTrajectorySampling("ADAPTIVE", "0.5")
      .SetTemporalDynamic("1.2")
      .ConsiderSpacecharge("True")
      .SetGunIteration("False")
      .SetGunIterationMaxN("10")
      .SetGunIterationAccuracy("-30 dB")
      .SetGunIterationRelaxation("0.3")
      .SetGunIterationWithHField("False")
      .StoreResultsInDataCache("True")
      .AddTrackingSource("All sources", "")
      .AddStaticsField("M-static", "1.0", "False")
      .DefaultBoundaryEstatic("normal")
      .DefaultBoundaryMstatic("tangential")
   End With

   With ParticleInterface
      .Reset()
      .Name("particle interface 1")
      .Type("Import ASCII DC")
      .InterfaceFile("C:\cygwin64\home\naranjo\src\cst\Macros\baby-cpt\particles.pid")
      .UseRelativePath("False")
      .UseLocalCopyOnly("False")
      ' .DirNew("X")
      ' .InvertOrientation("False")
      ' .XShift("0.0")
      ' .YShift("0.0")
      ' .ZShift("-50")
      .Create()
   End With
End Sub

'     __   ___   ___ ___  ____  ______   ___   ____
'    /  ] /   \ |   |   ||    \|      | /   \ |    \
'   /  / |     || _   _ ||  o  )      ||     ||  _  |
'  /  /  |  O  ||  \_/  ||   _/|_|  |_||  O  ||  |  |
' /   \_ |     ||   |   ||  |    |  |  |     ||  |  |
' \     ||     ||   |   ||  |    |  |  |     ||  |  |
'  \____| \___/ |___|___||__|    |__|   \___/ |__|__|

Public Function cpt_DefineParameters()
      StoreParameter("cpt_theta0", "8")
      StoreParameter("cpt_theta1", "28")
      StoreParameter("cpt_theta2", "28")
      StoreParameter("cpt_coil_width", "60.0")
      StoreParameter("cpt_coil_height", "60.0")
      StoreParameter("cpt_d1", "cpt_coil_width")
      StoreParameter("cpt_d2", "0.0")
      StoreParameter("cpt_b0", "150.0")
      StoreParameter("cpt_b1", "235.0")
      StoreParameter("cpt_b2", "cpt_b1+cpt_coil_width")
      StoreParameter("cpt_b3", "500.0")
      StoreParameter("cpt_b4", "500.0")
      StoreParameter("cpt_b5", "150.0")
      StoreParameter("cpt_r3", "cpt_b1 - cpt_b5")
      StoreParameter("cpt_a0", "5.0")
      StoreParameter("cpt_a1", "40.0")
      StoreParameter("cpt_a2", "cpt_a0+(cpt_b1-cpt_b0)*tan(cpt_theta0*pi/180)")
      StoreParameter("cpt_a3", "cpt_a1+cpt_b1*tan(cpt_theta1*pi/180)")
      StoreParameter("cpt_a10", "cpt_a3+(cpt_b2-cpt_b1)*tan(cpt_theta1*pi/180)")
      StoreParameter("cpt_a4", "cpt_a2+cpt_d1/cos(cpt_theta0*pi/180)+(cpt_b2-cpt_b1)*tan(cpt_theta0*pi/180)")
      ' StoreParameter("cpt_a4", "150")
      StoreParameter("cpt_a5", "cpt_a10-cpt_d2/cos(cpt_theta1*pi/180)")
      StoreParameter("cpt_a6", "cpt_a4+(cpt_b3-cpt_b2)*tan(cpt_theta0*pi/180)")
      ' StoreParameter("cpt_a6", "150")
      StoreParameter("cpt_a7", "cpt_a5+(cpt_b3-cpt_b2)*tan(cpt_theta2*pi/180)")
      StoreParameter("cpt_a8", "cpt_a0+(cpt_b4-cpt_b0)*tan(cpt_theta0*pi/180)")
      StoreParameter("cpt_a9", "cpt_a10+(cpt_b4-cpt_b2)*tan(cpt_theta2*pi/180)")
      StoreParameter("cpt_c0", "15")
      StoreParameter("cpt_c1", "75.0")
      StoreParameter("cpt_c2", "187.5") ' half-height
      StoreParameter("cpt_r0", "25.0")
      StoreParameter("cpt_r1", "25.0")
      StoreParameter("cpt_r2", "50.0")
      StoreParameter("cpt_vpole_a1", "0.1")
      StoreParameter("cpt_hex_a0", "cpt_c0*(3*cpt_b1^2/cpt_c0^2-1)^(1/3)")
      StoreParameter("cpt_infinity", "2000.0")
      ' StoreParameter("cpt_current", "4500.0")
      ' StoreParameter("cpt_current", "9000.0")
      StoreParameter("cpt_current", "18000.0")
End Function

Public Function cpt_Build()
   cpt_InsertPole()
   cpt_InsertYokeAndCoils()
   cpt_InsertScintillator()
   ' cpt_Mirror()
   ' cpt_MeshSettings()
   ' Curve.DeleteCurve("cpt_curves")
End Function

Public Function cpt_InsertPole()
   With WCS
      .ActivateWCS("local")
      .SetNormal("0", "-1", "0")
      .SetOrigin("0", "0", "0")
      .SetUVector("1", "0", "0")
   End With

   ' pole with wedge-shaped cross-section
   With Polygon
      .Reset()
      .Name("magnet_profile_horizontal")
      .Curve("cpt_curves")
      .Point("cpt_a0", "1")
      .LineTo("cpt_a1", "1")
      .LineTo("cpt_a10", "cpt_b2")
      .LineTo("cpt_a9", "cpt_b4")
      .LineTo("cpt_a8", "cpt_b4")
      .LineTo("cpt_a0", "cpt_b0")
      .LineTo("cpt_a0", "1")
      .Create()
   End With

   Pick.PickCurveEndpointFromId( _
	"cpt_curves:magnet_profile_horizontal", "4")
   Pick.PickCurveEndpointFromId( _
	"cpt_curves:magnet_profile_horizontal", "5")

   With BlendCurve
      .Reset()
      .Name("blend1")
      .Radius("cpt_r0")
      .UsePickedPoints()
      .Create()
   End With

   Pick.PickCurveEndpointFromId( _
	"cpt_curves:magnet_profile_horizontal", "6")

   With BlendCurve
      .Reset()
      .Name("blend2")
      .Radius("cpt_r2")
      .UsePickedPoints()
      .Create()
   End With

   With ExtrudeCurve
      .Reset()
      .Name("top")
      .Component("cpt_pole")
      .Material("Steel-1008")
      .Thickness("cpt_c2")
      .DeleteProfile("True")
      .Curve("cpt_curves:magnet_profile_horizontal")
      .Create()
   End With

   With WCS
      .ActivateWCS("local")
      .SetNormal("1", "0", "0")
      .SetOrigin("-1.0", "0", "0")
      .SetUVector("0", "0", "1")
   End With

   With AnalyticalCurve
      .Reset()
      .Name("analytical1")
      .Curve("cpt_curves")
      .LawX("sqr((t^3+cpt_hex_a0^3)/(3*t))")
      .LawY("t")
      .LawZ("0")
      .ParameterRange("cpt_c0", "cpt_c2+1")
      .Create()
   End With

   Pick.NextPickToDatabase("1")
   Pick.PickCurveEndpointFromId("cpt_curves:analytical1", "1")
   Pick.NextPickToDatabase("2")
   Pick.PickCurveEndpointFromId("cpt_curves:analytical1", "2")

   With Polygon
      .Reset()
      .Name("polygon1")
      .Curve("cpt_curves")
      .Point("xp(1)", "yp(1)")
      .LineTo("xp(1)", "cpt_c1")
      .LineTo("cpt_b4+1", "cpt_c1")
      .LineTo("cpt_b4+1", "-1")
      .LineTo("-1", "-1")
      .LineTo("-1", "yp(2)+1")
      .LineTo("xp(2)", "yp(2)+1")
      .LineTo("xp(2)", "yp(2)")
      .Create()
   End With

   With ExtrudeCurve
     .Reset()
     .Name("cutaway")
     .Component("cpt_yoke")
     .Material("Steel-1008")
     .Thickness("cpt_a9+2")
     .Twistangle("0.0")
     .Taperangle("0.0")
     .DeleteProfile("True")
     .Curve("cpt_curves:analytical1")
     .Create()
   End With
   Solid.Subtract("cpt_pole:top", "cpt_yoke:cutaway")

   With WCS
      .ActivateWCS("local")
      .SetNormal("0", "-1", "0")
      .SetOrigin("cpt_r3+cpt_a0", "0", "cpt_b5")
      .SetUVector("1", "0", "0")
   End With

   With AnalyticalCurve
      .Reset()
      .Name("analytical1")
      .Curve("cpt_curves")
      .LawX("t")
      .LawY("sqr(cpt_r3*cpt_r3 - t*t)")
      .LawZ("0")
      .ParameterRange("-cpt_r3+0.01", "cpt_r3-0.01")
      .Create()
   End With

   Pick.NextPickToDatabase("1")
   Pick.PickCurveEndpointFromId("cpt_curves:analytical1", "1")
   Pick.NextPickToDatabase("2")
   Pick.PickCurveEndpointFromId("cpt_curves:analytical1", "2")

   With Polygon
      .Reset()
      .Name("polygon1")
      .Curve("cpt_curves")
      .Point("xp(1)", "yp(1)")
      .LineTo("-cpt_r3", "cpt_r3+1")
      .LineTo("cpt_r3", "cpt_r3+1")
      .LineTo("xp(2)", "yp(2)")
      .Create()
   End With

   With ExtrudeCurve
     .Reset()
     .Name("solid1")
     .Component("cpt_yoke")
     .Material("Steel-1008")
     .Thickness("75")
     .Twistangle("0.0")
     .Taperangle("0.0")
     .DeleteProfile("True")
     .Curve("cpt_curves:analytical1")
     .Create()
   End With
   Solid.Subtract("cpt_pole:top", "cpt_yoke:solid1")

   With WCS
      .SetNormal("0", "0", "1")
      .SetOrigin("0", "0", "0")
      .SetUVector("1", "0", "0")
   End With

   With Transform
      .Reset()
      .Name("cpt_pole")
      .Origin("Free")
      .PlaneNormal("0", "1", "0")
      .MultipleObjects("True")
      .Transform("Shape", "Mirror")
   End With
   Solid.Rename("cpt_pole:top_1", "cpt_pole:bottom")
End Function

Public Function cpt_InsertYokeAndCoils()
   With WCS
      .ActivateWCS("local")
      .SetNormal("0", "-1", "0")
      .SetOrigin("0", "-cpt_c1", "0")
      .SetUVector("1", "0", "0")
   End With

   ' pole with wedge-shaped cross-section
   With Polygon
      .Reset()
      .Name("magnet_profile_horizontal")
      .Curve("cpt_curves")
      .Point("cpt_a4", "cpt_b2")
      .LineTo("cpt_a5", "cpt_b2")
      .LineTo("cpt_a7", "cpt_b3")
      .LineTo("cpt_a6", "cpt_b3")
      .LineTo("cpt_a4", "cpt_b2")
      .Create()
   End With

   Pick.PickCurveEndpointFromId( _
	"cpt_curves:magnet_profile_horizontal", "1")
   Pick.PickCurveEndpointFromId( _
	"cpt_curves:magnet_profile_horizontal", "2")
   Pick.PickCurveEndpointFromId( _
	"cpt_curves:magnet_profile_horizontal", "3")
   Pick.PickCurveEndpointFromId( _
	"cpt_curves:magnet_profile_horizontal", "4")
   With BlendCurve
      .Reset()
      .Name("blend3")
      .Radius("cpt_r0")
      .UsePickedPoints()
      .Create()
   End With

   With ExtrudeCurve
      .Reset()
      .Name("right")
      .Component("cpt_yoke")
      .Material("Steel-1008")
      .Thickness("-2*cpt_c1")
      .DeleteProfile("False")
      .Curve("cpt_curves")
      .Create()
   End With

   With WCS
      .SetNormal("-1", "0", "0")
      .SetOrigin("0.5*(cpt_a4+cpt_a5)", "cpt_c0", "cpt_b2")
      .SetUVector("1", "0", "0")
   End With

   With Rectangle
      .Reset()
      .Name("rectangle")
      .Curve("cpt_curves")
      .Xrange("0", "cpt_coil_width")
      .Yrange("0", "cpt_coil_height")
      .Create()
   End With

   With Coil
      .Reset()
      .Name("bottom")
      .CoilType("Stranded Current")
      .ToolType("CurveCurve")
      .Value("cpt_current")
      .CurrentDirection("Regular")
      .ProjectProfileToPathAdvanced("True")
      .ProfileName("cpt_curves:rectangle")
      .PathName("cpt_curves:magnet_profile_horizontal")
      .Create()
   End With

   With WCS
      .SetNormal("0", "0", "1")
      .SetOrigin("0", "0", "0")
      .SetUVector("1", "0", "0")
   End With

   With Transform
      .Reset()
      .Name("bottom")
      .Origin("Free")
      .Center("0", "0", "0")
      .PlaneNormal("0", "1", "0")
      .MultipleObjects("True")
      .Transform("Coil", "Mirror")
   End With
   Coil.Rename("bottom_1", "top")
End Function

Public Function cpt_InsertScintillator()
   With WCS
      .SetNormal("0", "0", "1")
      .SetOrigin("cpt_a1", "0", "0")
      .SetUVector("1", "0", "0")
   End With

   WCS.RotateWCS("v", "cpt_theta1")

   With Brick
      .Reset()
      .Name("right")
      .Component("cpt_scint")
      .Material("Scintillator")
      .Xrange("0.0", "10.0")
      .Yrange("-100.0", "100.0")
      .Zrange("0.0", "240.0")
      .Create()
   End With

   With WCS
      .ActivateWCS("local")
      .SetNormal("0", "0", "1")
      .SetOrigin("0", "0", "0")
      .SetUVector("1", "0", "0")
   End With
End Function

Public Function cpt_Mirror()
   With WCS
      .ActivateWCS("local")
      .SetNormal("0", "0", "1")
      .SetOrigin("0", "0", "0")
      .SetUVector("1", "0", "0")
   End With

   With Transform
      .Reset()
      .Name("cpt_pole")
      .Origin("Free")
      .PlaneNormal("1", "0", "0")
      .MultipleObjects("True")
      .Transform("Shape", "Mirror")
   End With

   Solid.Rename("cpt_pole:bottom", "bottom_right")
   Solid.Rename("cpt_pole:bottom_1", "bottom_left")
   Solid.Rename("cpt_pole:top", "top_right")
   Solid.Rename("cpt_pole:top_1", "top_left")

   With Transform
      .Reset()
      .Name("coil$bottom")
      .AddName("coil$top")
      .AddName("solid$cpt_yoke:right")
      .Origin("Free")
      .Center("0", "0", "0")
      .PlaneNormal("1", "0", "0")
      .MultipleObjects("True")
      .GroupObjects("False")
      .Repetitions("1")
      .MultipleSelection("False")
      .Transform("Mixed", "Mirror")
   End With

   Solid.Rename("cpt_yoke:right_1", "left")

   Coil.Rename("bottom_1", "cpt_bottom_left")
   Coil.Rename("top_1", "cpt_top_left")
   Coil.Rename("bottom", "cpt_bottom_right")
   Coil.Rename("top", "cpt_top_right")

   Coil.FlipCurrentDirection("cpt_top_left")
   Coil.FlipCurrentDirection("cpt_bottom_left")

   With Transform
      .Reset()
      .Name("cpt_scint")
      .Origin("Free")
      .Center("0", "0", "0")
      .PlaneNormal("1", "0", "0")
      .MultipleObjects("True")
      .GroupObjects("False")
      .Repetitions("1")
      .MultipleSelection("False")
      .Transform("Shape", "Mirror")
   End With
   Solid.Rename("cpt_scint:right_1", "left")
End Function

Public Function cpt_MeshSettings()
   Group.Add("cpt_meshgroup", "mesh")
   With MeshSettings
      With .ItemMeshSettings ("group$cpt_meshgroup")
	 .SetMeshType("Hex")
	 .Set("EdgeRefinement", "1")
	 .Set("Extend", "0", "0", "0")
	 .Set("RefinementPolicy", "ABS_VALUE")
	 .Set("Step", "0", "2", "6")
	 .Set("StepRefinementCollectPolicy", "REFINE_INTERIOR")
	 .Set("StepRefinementExtentPolicy", "EXTENT_ABS_VALUE")
	 .Set("UseSameExtendXYZ", 0)
	 .Set("UseSameStepWidthXYZ", 0)
      End With
   End With

   Group.AddItem("solid$cpt_pole:top_left", "cpt_meshgroup")
   Group.AddItem("solid$cpt_pole:top_right", "cpt_meshgroup")
   Group.AddItem("solid$cpt_pole:bottom_left", "cpt_meshgroup")
   Group.AddItem("solid$cpt_pole:bottom_right", "cpt_meshgroup")
End Function
